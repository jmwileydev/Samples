<UserControl x:Class="WpfPlayground.UserControls.AnimationDemoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:controls="clr-namespace:WpfPlayground.Controls"
             xmlns:viewmodels="clr-namespace:WpfPlayground.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:AnimationDemoViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource SectionTextBlockStyle}"/>
    </UserControl.Resources>
    <Grid d:Background="{StaticResource light_primaryBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{StaticResource AnimationSection}"
                       Style="{StaticResource SectionHeaderStyle}"/>
        <Grid Grid.Row="1" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Adding a Grid to hold the rectangle which can be manipulated with the sliders -->
            <Grid Width="120" Height="120" Grid.RowSpan="3">
                <Rectangle Name="MyRectangle" Width="50" Height="50"
                           RenderTransformOrigin="0.5,0.5"
                           HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0.0,0.0" EndPoint="1.0,1.0">
                            <GradientStop Color="{StaticResource light_errorContainer}" Offset="0.0"/>
                            <GradientStop Color="{StaticResource light_onTertiaryContainer}" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <RotateTransform x:Name="_rectangleRotateTransform"
                                                 Angle="{Binding ElementName=_rotationAngle, Path=Value}"/>
                            <ScaleTransform x:Name="_rectangleScaleTransform"
                        ScaleX="{Binding ElementName=_scaleX, Path=Value}"
                                       ScaleY="{Binding ElementName=_scaleY, Path=Value}"/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.ColumnSpan="2"
                    Style="{StaticResource SectionTextBlockStyle}" Text="{StaticResource ScaleLabel}"
                           Margin="10"></TextBlock>
                <TextBlock Grid.Row="1" Text="{StaticResource XCoordinateLabel}"
                        Style="{StaticResource SectionTextBlockStyle}" HorizontalAlignment="Right"/>
                <Slider Grid.Row="1" Grid.Column="1"
                        x:Name="_scaleX" Template="{DynamicResource MDSliderTemplate}"
                        Maximum="2.0" Minimum="0.0" Value="1.0"
                            Orientation="Horizontal" Width="100" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="2" Text="{StaticResource YCoordinateLabel}"/>
                <Slider Grid.Column="1" Grid.Row="2"
                        x:Name="_scaleY" Template="{DynamicResource MDSliderTemplate}"
                        Width="100" VerticalAlignment="Center" Maximum="2.0" Minimum="0.0"
                        Value="1.0"
                            Orientation="Horizontal"/>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.ColumnSpan="2" Text="{StaticResource RotationLabel}"
                    Style="{StaticResource SectionTextBlockStyle}" Margin="10"></TextBlock>
                <TextBlock Grid.Row="1" Text="{StaticResource AngleLabel}"
                        Style="{StaticResource SectionTextBlockStyle}" HorizontalAlignment="Right"/>
                <Slider Grid.Column="1" Grid.Row="1" Template="{DynamicResource MDSliderTemplate}" x:Name="_rotationAngle"
                        Maximum="360.0" Minimum="0.0" Value="0.0" Orientation="Horizontal" Width="100" VerticalAlignment="Center">
                </Slider>
            </Grid>
        </Grid>
        
        <!-- This is the section for the DoubleAnimation -->
        <Grid Background="Transparent" Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- SubSection header -->
            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5"
                        Text="{StaticResource DoubleAnimationSubHeader}"
                       Style="{StaticResource SectionSubheaderStyle}"/>
            
            <!-- Instructions for how to work -->
            <TextBlock Grid.Row="1" Grid.ColumnSpan="5" Text="{StaticResource DoubleAnimationInstructions}"
                       Style="{StaticResource SectionTextBlockStyle}" Margin="10,5"/>

            <!-- Easing Function Section -->
            <TextBlock Grid.Row="2" Text="{StaticResource EasingFunctionLabel}" Style="{StaticResource SectionTextBlockStyle}"/>
            <ComboBox Grid.Row="2" Grid.Column="1"
                      Style="{StaticResource ComboBoxStyle}" VerticalAlignment="Center" Width="100"
                      ItemsSource="{Binding EasingFunctions}"
                      SelectedItem="{Binding EasingFunction, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Type, Converter={StaticResource easingFunctionTypeToStringConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            <TextBlock Grid.Row="2" Grid.Column="2" Text="{StaticResource BouncesLabel}" Style="{StaticResource SectionTextBlockStyle}"
                        Visibility="{Binding EasingFunction.Bounces, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="2" Grid.Column="3" Width="30" VerticalAlignment="Center" d:Visibility="Visible"
                     Text="{Binding Bounces, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding EasingFunction.Bounces, Converter={StaticResource booleanToVisibilityConverter}}"
                        TextAlignment="Right"
                        Style="{StaticResource SectionTextBoxStyle}"/>
            <TextBlock  Grid.Row="2" Grid.Column="4" Text="{StaticResource BouncinessLabel}" Style="{StaticResource SectionTextBlockStyle}"
                        Visibility="{Binding EasingFunction.Bounces, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox  Grid.Row="2" Grid.Column="5" Width="30" VerticalAlignment="Center"
                      Text="{Binding Bounciness, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding EasingFunction.Bounces, Converter={StaticResource booleanToVisibilityConverter}}"
                        TextAlignment="Right"
                        Style="{StaticResource SectionTextBoxStyle}"/>

            <!-- EasingMode section -->
            <TextBlock Grid.Row="3" Style="{StaticResource SectionTextBlockStyle}" Text="{StaticResource EasingModeLabel}"/>
            <ComboBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ComboBoxStyle}" VerticalAlignment="Center" Width="100"
                        ItemsSource="{Binding EasingModes}" SelectedItem="{Binding EasingMode, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding Converter={StaticResource easingModeToStringConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="4" Grid.ColumnSpan="5">
                <controls:AnimatedBorder x:Name="_animatedBorder" Grid.Row="1" Width="50" Height="50"
                       Canvas.Left="10" Canvas.Top="10"
                           RenderTransformOrigin="0.5,0.5"
                           HorizontalAlignment="Center" VerticalAlignment="Center">
                    <controls:AnimatedBorder.Background>
                        Transparent
                    </controls:AnimatedBorder.Background>
                    <controls:AnimatedBorder.Triggers>
                        <EventTrigger RoutedEvent="controls:AnimatedBorder.BeginBounceEase">
                            <BeginStoryboard x:Name="BounceEaseStoryboard">
                                <Storyboard>
                                    <DoubleAnimation
                                    Storyboard.TargetProperty="(Canvas.Left)"
                                    To="500" Duration="0:0:2" AutoReverse="True">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase Bounces="{Binding Bounces}" EasingMode="{Binding EasingMode}"
                                                        Bounciness="{Binding Bounciness}" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="controls:AnimatedBorder.BeginCubicEase">
                            <BeginStoryboard x:Name="CubicEaseStoryboard">
                                <Storyboard>
                                    <DoubleAnimation
                                    Storyboard.TargetProperty="(Canvas.Left)"
                                    To="500" Duration="0:0:2" AutoReverse="True">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="{Binding EasingMode}"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </controls:AnimatedBorder.Triggers>
                    <Ellipse Width="50" Height="50" Fill="Red">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <prism:InvokeCommandAction Command="{Binding BeginAnimationCommand}"
                                           CommandParameter="{Binding ElementName=_animatedBorder}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Ellipse>
                </controls:AnimatedBorder>
            </Canvas>
        </Grid>
    </Grid>
</UserControl>
