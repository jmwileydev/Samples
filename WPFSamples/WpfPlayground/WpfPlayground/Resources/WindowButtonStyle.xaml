<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- TODO Try and see if in the future I can use these Icons for the Window frame buttons. For now I went with the simpler Font approach -->
    <!--<GeometryDrawing x:Key="AppCloseButtonGeometry" Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" 
                             Geometry="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" />
    <DrawingImage x:Key="CloseButtonImage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" 
                             Geometry="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" />
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="MinimizeButtonImage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" Geometry="M20,14H4V10H20" />
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="MaximizeButtonImage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" Geometry="M4,4H20V20H4V4M6,8V18H18V8H6Z" />
        </DrawingImage.Drawing>
    </DrawingImage>-->

    <!-- The highlight on the button when it gets focus via the keyboard -->
    <Style x:Key="WindowButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="StaticForegroundBrush" Color="{StaticResource light_onPrimaryContainer}" Opacity="0.75"/>

    <SolidColorBrush x:Key="Button.Static.Background" Color="{StaticResource light_primaryContainer}" Opacity="0.50"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource light_primaryContainer}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{StaticResource light_surfaceVariant}"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource light_primaryContainerShade3}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="{StaticResource light_outline}"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource StaticForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource light_onPrimaryContainerBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XAppBarButtonStyleX" TargetType="Button">
        <Setter Property="Foreground" Value="#B0FFFFFF"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                        <!--<Grid x:Name="_contentGrid"
                              Width="30"
                              Height="30">
                            <Ellipse x:Name="_ellipse" 
                                 Fill="Transparent"
                                 Stroke="Transparent" StrokeThickness="1"
                                 Width="25"
                                 Height="25">
                            </Ellipse>-->
                            <!--<Image Width="24" Height="24" x:Name="_image">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" 
                             Geometry="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" />
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>-->
                    <!--Geometry="M12,20
                                                     C7.59,20 4,16.41 4,12
                                                     C4,7.59 7.59,4 12,4
                                                     C16.41,4 20,7.59 20,12
                                                     C20,16.41 16.41,20 12,20
                                                     M12,2
                                                     C6.47,2 2,6.47 2,12
                                                     C2,17.53 6.47,22 12,22
                                                     C17.53,22 22,17.53 22,12
                                                     C22,6.47 17.53,2 12,2
                                                     M14.59,8
                                                     L12,10.59
                                                     L9.41,8
                                                     L8,9.41
                                                     L10.59,12
                                                     L8,14.59
                                                     L9.41,16
                                                     L12,13.41
                                                     L14.59,16
                                                     L16,14.59
                                                     L13.41,12
                                                     L16,9.41
                                                     L14.59,8
                                                     Z" />-->
                    <Image Stretch="None" HorizontalAlignment="Left">
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing Brush="Red" 
                                        Geometry="M12,20
                                                     C7.59,20 4,16.41 4,12
                                                     C4,7.59 7.59,4 12,4
                                                     C16.41,4 20,7.59 20,12
                                                     C20,16.41 16.41,20 12,20
                                                     M12,2
                                                     C6.47,2 2,6.47 2,12
                                                     C2,17.53 6.47,22 12,22
                                                     C17.53,22 22,17.53 22,12
                                                     C22,6.47 17.53,2 12,2
                                                     Z">
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="White" Thickness="1"/>
                                        </GeometryDrawing.Pen>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                    <!--</Grid>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Fill" Value="#A0000000" TargetName="_ellipse"/>-->
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter Property="Fill" Value="#30FFFFFF" TargetName="_ellipse"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>